import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useContext } from 'react';
import { motion } from 'framer-motion';
import { InvitationContext } from '@/context/InvitationContext';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { CalendarDays, MapPin, User, Mail, Check, X } from 'lucide-react';
export default function InvitationsPage() {
    const { invitations, respondToInvitation } = useContext(InvitationContext);
    return (_jsxs("div", { className: "space-y-8", children: [_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "flex justify-between items-center", children: [_jsxs("div", { children: [_jsx("h2", { className: "text-3xl font-bold text-gray-900", children: "Invitations" }), _jsx("p", { className: "text-gray-600 mt-1", children: invitations.length > 0
                                    ? `You have ${invitations.length} pending invitation${invitations.length !== 1 ? 's' : ''}`
                                    : 'No pending invitations at the moment' })] }), invitations.length > 0 && (_jsxs(motion.div, { initial: { opacity: 0, scale: 0.9 }, animate: { opacity: 1, scale: 1 }, transition: { delay: 0.2 }, className: "flex items-center gap-2 px-3 py-1.5 bg-purple-50 text-purple-700 rounded-full text-sm font-medium", children: [_jsx(Mail, { className: "w-4 h-4" }), invitations.length, " new"] }))] }), invitations.length === 0 ? (_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.3 }, className: "text-center py-16", children: [_jsx("div", { className: "text-6xl mb-4", children: "\uD83D\uDCE8" }), _jsx("h3", { className: "text-xl font-semibold text-gray-900 mb-2", children: "No Pending Invitations" }), _jsx("p", { className: "text-gray-600 max-w-md mx-auto", children: "When someone invites you to their game night, you'll see those invitations here to accept or decline." })] })) : (_jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: invitations.map((invite, index) => (_jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: index * 0.1 }, whileHover: { y: -4 }, className: "group", children: _jsx(Card, { className: "p-0 shadow-sm hover:shadow-lg transition-all duration-300 bg-white border-gray-200 hover:border-purple-200 group-hover:ring-1 group-hover:ring-purple-100", children: _jsxs(CardContent, { className: "p-6 space-y-4", children: [_jsxs("div", { className: "flex items-start justify-between", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 group-hover:text-purple-700 transition-colors", children: invite.gameNight.title }), _jsx("div", { className: "w-2 h-2 bg-orange-400 rounded-full flex-shrink-0 mt-2 animate-pulse" })] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center gap-3 text-sm text-gray-600", children: [_jsx(User, { className: "w-4 h-4 text-purple-500" }), _jsxs("span", { children: ["Invited by ", invite.sender.username] })] }), _jsxs("div", { className: "flex items-center gap-3 text-sm text-gray-600", children: [_jsx(CalendarDays, { className: "w-4 h-4 text-purple-500" }), _jsx("span", { children: invite.gameNight.date })] }), _jsxs("div", { className: "flex items-center gap-3 text-sm text-gray-600", children: [_jsx(MapPin, { className: "w-4 h-4 text-purple-500" }), _jsx("span", { className: "truncate", children: invite.gameNight.location })] })] }), _jsxs("div", { className: "flex gap-3 pt-2 border-t border-gray-100", children: [_jsx(motion.div, { whileHover: { scale: 1.02 }, whileTap: { scale: 0.98 }, className: "flex-1", children: _jsxs(Button, { size: "sm", className: "w-full bg-green-600 hover:bg-green-700 text-white shadow-sm transition-all duration-200", onClick: () => respondToInvitation(invite._id, 'accepted'), children: [_jsx(Check, { className: "w-4 h-4 mr-1" }), "Accept"] }) }), _jsx(motion.div, { whileHover: { scale: 1.02 }, whileTap: { scale: 0.98 }, className: "flex-1", children: _jsxs(Button, { size: "sm", variant: "outline", className: "w-full border-gray-300 hover:border-red-300 hover:text-red-600 hover:bg-red-50 transition-all duration-200", onClick: () => respondToInvitation(invite._id, 'declined'), children: [_jsx(X, { className: "w-4 h-4 mr-1" }), "Decline"] }) })] })] }) }) }, invite._id))) }))] }));
}
