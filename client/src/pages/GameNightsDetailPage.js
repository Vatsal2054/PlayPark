import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useParams, useLocation } from 'react-router-dom';
import { useContext, useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import { GameNightContext } from '@/context/GameNightContext';
import { InvitationContext } from '@/context/InvitationContext';
import { InvitePlayerModal } from '@/components/modals/InvitePlayerModal';
import { Card, CardContent } from '@/components/ui/card';
// import { Separator } from '@/components/ui/separator';
import { CalendarDays, MapPin, Users, Clock, UserCheck, ClipboardClock, ArrowLeft } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { formatDate } from '@/helpers/Data/formatDate';
export default function GameNightsDetailPage() {
    const { id } = useParams();
    const location = useLocation();
    const { getGameNightById } = useContext(GameNightContext);
    const { fetchInvitationsByGameNight, gameNightInvitations } = useContext(InvitationContext);
    const [gameNight, setGameNight] = useState(null);
    const invitations = gameNightInvitations[id] || [];
    const isJoinedView = location.pathname.includes('/dashboard/joined-game-nights');
    useEffect(() => {
        if (!id)
            return;
        (async () => {
            const night = await getGameNightById(id);
            await fetchInvitationsByGameNight(id);
            setGameNight(night);
        })();
    }, [id]);
    const pending = invitations.filter((i) => i.status === 'pending');
    const accepted = invitations.filter((i) => i.status === 'accepted');
    if (!gameNight) {
        return (_jsx("div", { className: "flex items-center justify-center py-16", children: _jsxs(motion.div, { initial: { opacity: 0 }, animate: { opacity: 1 }, className: "text-center", children: [_jsx("div", { className: "w-8 h-8 border-2 border-purple-500 border-t-transparent rounded-full animate-spin mx-auto mb-4" }), _jsx("p", { className: "text-gray-600", children: "Loading game night details..." })] }) }));
    }
    return (_jsxs("div", { className: "space-y-8", children: [_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, className: "space-y-6", children: [_jsxs(Button, { variant: "ghost", onClick: () => window.history.back(), className: "gap-2 text-gray-600 hover:text-purple-700 hover:bg-purple-50 p-2", children: [_jsx(ArrowLeft, { className: "w-4 h-4" }), "Back to ", isJoinedView ? 'Joined Game Nights' : 'Game Nights'] }), _jsx("div", { className: "bg-gradient-to-r from-purple-50 to-indigo-50 rounded-xl p-6 border border-purple-100", children: _jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { className: "space-y-4 flex-1", children: [_jsx("h1", { className: "text-3xl font-bold text-gray-900", children: gameNight.title }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs("div", { className: "flex items-center gap-3 text-gray-700", children: [_jsx("div", { className: "p-2 rounded-lg bg-white/80", children: _jsx(CalendarDays, { className: "w-5 h-5 text-purple-600" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-xs text-gray-500 uppercase tracking-wide", children: "Date" }), _jsx("p", { className: "font-medium", children: formatDate(gameNight.date) })] })] }), _jsxs("div", { className: "flex items-center gap-3 text-gray-700", children: [_jsx("div", { className: "p-2 rounded-lg bg-white/80", children: _jsx(Clock, { className: "w-5 h-5 text-purple-600" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-xs text-gray-500 uppercase tracking-wide", children: "Time" }), _jsx("p", { className: "font-medium", children: gameNight.time })] })] }), _jsxs("div", { className: "flex items-center gap-3 text-gray-700", children: [_jsx("div", { className: "p-2 rounded-lg bg-white/80", children: _jsx(MapPin, { className: "w-5 h-5 text-purple-600" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-xs text-gray-500 uppercase tracking-wide", children: "Location" }), _jsx("p", { className: "font-medium truncate", children: gameNight.location })] })] })] })] }), !isJoinedView && (_jsx(motion.div, { initial: { opacity: 0, scale: 0.9 }, animate: { opacity: 1, scale: 1 }, transition: { delay: 0.2 }, children: _jsx(InvitePlayerModal, { gameNightId: id }) }))] }) })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-8", children: [_jsxs(motion.div, { initial: { opacity: 0, x: -20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.3 }, children: [_jsxs("div", { className: "flex items-center gap-3 mb-4", children: [_jsx(UserCheck, { className: "w-5 h-5 text-green-600" }), _jsxs("h3", { className: "text-lg font-semibold text-gray-900", children: ["Confirmed Players (", accepted.length, ")"] })] }), _jsx("div", { className: "space-y-3", children: accepted.length === 0 ? (_jsx(Card, { className: "border-dashed border-gray-300 p-0", children: _jsxs(CardContent, { className: "p-6 text-center", children: [_jsx(Users, { className: "w-8 h-8 text-gray-400 mx-auto mb-2" }), _jsx("p", { className: "text-gray-500", children: "No confirmed players yet" })] }) })) : (accepted.map((inv, index) => (_jsx(motion.div, { initial: { opacity: 0, y: 10 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.4 + index * 0.1 }, children: _jsx(Card, { className: "hover:shadow-md transition-shadow duration-200 border-green-200 bg-green-50/30 p-0", children: _jsx(CardContent, { className: "p-4", children: _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-8 h-8 bg-green-100 rounded-full flex items-center justify-center", children: _jsx("span", { className: "text-green-700 font-semibold text-sm", children: inv.receiver?.username?.[0]?.toUpperCase() || '?' }) }), _jsx("span", { className: "font-medium text-gray-900", children: inv.receiver?.username || 'Unknown User' }), _jsx("div", { className: "ml-auto w-2 h-2 bg-green-400 rounded-full" })] }) }) }) }, inv._id)))) })] }), !isJoinedView && (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.3 }, children: [_jsxs("div", { className: "flex items-center gap-3 mb-4", children: [_jsx(ClipboardClock, { className: "w-5 h-5 text-amber-600" }), _jsxs("h3", { className: "text-lg font-semibold text-gray-900", children: ["Pending Invitations (", pending.length, ")"] })] }), _jsx("div", { className: "space-y-3", children: pending.length === 0 ? (_jsx(Card, { className: "border-dashed border-gray-300 p-0", children: _jsxs(CardContent, { className: "p-6 text-center", children: [_jsx(ClipboardClock, { className: "w-8 h-8 text-gray-400 mx-auto mb-2" }), _jsx("p", { className: "text-gray-500", children: "No pending invitations" })] }) })) : (pending.map((inv, index) => (_jsx(motion.div, { initial: { opacity: 0, y: 10 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.4 + index * 0.1 }, children: _jsx(Card, { className: "hover:shadow-md transition-shadow duration-200 border-amber-200 bg-amber-50/30 p-0", children: _jsx(CardContent, { className: "p-4", children: _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-8 h-8 bg-amber-100 rounded-full flex items-center justify-center", children: _jsx("span", { className: "text-amber-700 font-semibold text-sm", children: inv.receiver?.username?.[0]?.toUpperCase() || '?' }) }), _jsx("span", { className: "font-medium text-gray-900", children: inv.receiver?.username || 'Unknown User' }), _jsx("div", { className: "ml-auto w-2 h-2 bg-amber-400 rounded-full animate-pulse" })] }) }) }) }, inv._id)))) })] }))] }), _jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.5 }, children: _jsx(Card, { className: "bg-gradient-to-r from-purple-50 to-indigo-50 border-purple-100", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6 text-center", children: [_jsxs("div", { children: [_jsx("div", { className: "text-2xl font-bold text-purple-600", children: accepted.length }), _jsx("p", { className: "text-sm text-gray-600", children: "Confirmed Players" })] }), !isJoinedView && (_jsxs("div", { children: [_jsx("div", { className: "text-2xl font-bold text-amber-600", children: pending.length }), _jsx("p", { className: "text-sm text-gray-600", children: "Pending Invitations" })] })), _jsxs("div", { children: [_jsx("div", { className: "text-2xl font-bold text-indigo-600", children: accepted.length + pending.length }), _jsx("p", { className: "text-sm text-gray-600", children: "Total Invites" })] })] }) }) }) })] }));
}
